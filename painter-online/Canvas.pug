<!DOCTYPE html>
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    meta(http-equiv="X-UA-Compatible", content="ie=edge")
    title Document
    style(rel="stylesheet", href="/farbtastic.css")
    script(src="http://code.jquery.com/jquery-1.11.1.min.js")
    script(src="/socket.io/socket.io.js")
    script(src="/farbtastic.js")
    script= `var room='${room}'`

    script.
      function Point(event, target) {
        this.x = event.pageX - $(target).position().left;
        this.y = event.pageY - $(target).position().top;
      }

      $(document).ready(function () {
        var canvas = document.getElementById('canvas');
        var context = canvas.getContext('2d');

        var width = 5,
        opacity = 1.0,
        pressure = 1.0,
        color = '#000000',
        isDown = false;
        var newPoint, oldPoint;

        $('#colorpicker').farbtastic(function (data) {
          color = data;
        });

        canvas.addEventListener('mousedown', function (event) {
          isDown = true;
          oldPoint = new Point(event, this)
        });

        canvas.addEventListener('touchstart', function (event) {
          isDown = true;
          oldPoint = new Point(event, this)
        });



        canvas.addEventListener('mouseup', function () { isDown = false });
        canvas.addEventListener('touchend', function () { isDown = false });

        canvas.addEventListener('mousemove', function (event) {
          if (isDown) {
            newPoint = new Point(event, this);
            socket.emit('draw', {
              width: width,
              color: color,
              x1: oldPoint.x,
              y1: oldPoint.y,
              x2: newPoint.x,
              y2: newPoint.y
            });
            oldPoint = newPoint
          }
        });

        canvas.addEventListener('touchmove', function (event) {
          if (isDown) {
            newPoint = new Point(event, this);
            socket.emit('draw', {
              width: width,
              color: color,
              x1: oldPoint.x,
              y1: oldPoint.y,
              x2: newPoint.x,
              y2: newPoint.y
            });
            oldPoint = newPoint
          }
        });

        $('#sliderA').change(function () {
          width = $(this).val();
        });

        $('#sliderB').change(function () {
          opacity = $(this).val() / 100;
        });

        var socket = io.connect();
        socket.emit('join', room);
        socket.on('line', function (data) {
          context.lineWidth = data.width;
          context.strokeStyle = data.color;
          context.globalAlpha = opacity * pressure;
          context.beginPath();
          context.moveTo(data.x1, data.y1);
          context.lineTo(data.x2, data.y2);
          context.stroke();
        });
      });
  body
    table(border="10")
      tr
        td(rowspan="3")
          canvas(id="canvas", width="1100", height="800")
        td(height="200")
          div(id="colorpicker")
      tr
        td(height="25")
          input(id="sliderA", type="range", min="0", max="20", value="5")
          br
          input(id="sliderB", type="range", min="0", max="100")
      tr
        td(style="background: orange;")